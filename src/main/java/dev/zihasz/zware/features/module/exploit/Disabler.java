package dev.zihasz.zware.features.module.exploit;

import dev.zihasz.zware.event.events.PacketEvent;
import dev.zihasz.zware.features.module.Category;
import dev.zihasz.zware.features.module.Module;
import dev.zihasz.zware.utils.networking.PacketUtils;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.*;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import org.apache.commons.lang3.RandomUtils;

import java.util.ArrayList;
import java.util.List;

public class Disabler extends Module {

	private final List<Packet<?>> packets = new ArrayList<>();
	private int transactions = 0;
	public Disabler() {
		super("Disabler", "anticheat :cold:", Category.EXPLOITS);
	}

	@Override
	public void onEnable() {
		mc.player.ticksExisted = 0;
	}

	@Override
	public void onUpdate() {
		mc.player.connection.sendPacket(new CPacketKeepAlive(0));

		if (mc.player.ticksExisted % 25 == 0) {
			mc.player.connection.sendPacket(new CPacketPlayer.Position(mc.player.posX, mc.player.posY + RandomUtils.nextFloat(100, 1000), mc.player.posZ, true));
			mc.player.connection.sendPacket(new CPacketPlayer.Rotation(mc.player.rotationYaw, mc.player.rotationPitch, true));
		}
		if (mc.player.ticksExisted % 120 == 0 && packets.size() > transactions) {
			mc.player.connection.sendPacket(packets.get(transactions++));
		}
		if (mc.player.ticksExisted % 600 == 0) {
			packets.clear();
			transactions = 0;
		}
		if (packets.size() > transactions) {
			mc.player.connection.sendPacket(packets.get(transactions++));
		}
	}

	@SubscribeEvent
	public void onPacketSend(PacketEvent.Send event) {
		Packet<?> raw = event.getPacket();

		if (raw instanceof CPacketCustomPayload) {
			CPacketCustomPayload pay = (CPacketCustomPayload) raw;
			if (pay.getChannelName().equalsIgnoreCase("MC|Brand")) {
				mc.player.connection.sendPacket(PacketUtils.generatePayload("REGISTER", "Lunar-Client"));
			}
		}
		if (raw instanceof CPacketPlayer) {
			CPacketPlayer packet = (CPacketPlayer) raw;
			mc.player.connection.sendPacket(new CPacketInput());
			if (mc.player.ticksExisted % 15 == 0) {
				packet.y += RandomUtils.nextDouble(100, 1000);
				mc.player.connection.sendPacket(PacketUtils.generatePayload("matrix:geyser", mc.player.getGameProfile().getName()));
			}
		}
		if (raw instanceof CPacketConfirmTransaction) {
			packets.add(raw);
			event.setCanceled(true);
		}
		if (raw instanceof CPacketKeepAlive) {
			CPacketKeepAlive packet = (CPacketKeepAlive) raw;
			packet.key -= RandomUtils.nextInt(1, 2147483647);
		}
	}

	@Override
	public void onDisable() {
		packets.clear();
		transactions = 0;
	}

}
